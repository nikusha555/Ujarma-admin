<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>
    <link rel="stylesheet" href="/css/auth/logIn.css">
</head>

<body>

    <div class="container" id="container">
        <form id="loginForm">
            <input type="email" id="email" name="email" placeholder="Email" required>
            <input type="password" id="password" name="password" placeholder="Password" required>
            <button class="btn" type="submit">Login</button>
        </form>
    </div>

    <div id="result"></div>

    <script>
        const form = document.getElementById('loginForm');
        const result = document.getElementById('result');
        const container = document.getElementById('container');

        form.addEventListener('submit', async (event) => {
            event.preventDefault();

            const email = document.getElementById('email').value;
            const password = document.getElementById('password').value;

            try {
                const response = await fetch('/', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ email, password })
                });

                if (response.ok) {
                    const data = await response.json();


                    // Increase the container size
                    container.style.width = '100vw';
                    container.style.height = '100vh';
                    container.style.borderRadius = '0'; // Remove border-radius to make it rectangular
                    container.style.transition = 'width 1s ease, height 1s ease, border-radius 1s ease'; // Smooth transition effect

                    // Redirect to the specified URL after a delay
                    setTimeout(() => {
                        window.location.href = data.redirectUrl;
                    }, 1000); // 1-second delay to allow the container to resize before redirecting

                } else {
                    const errorData = await response.json();
                    result.textContent = `Error: ${errorData.error}`;
                }
            } catch (error) {
                result.textContent = `Error: ${error.message}`;
            }
        });
    </script>
</body>

</html>